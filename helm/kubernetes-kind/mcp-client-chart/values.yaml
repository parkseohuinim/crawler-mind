replicaCount: 1

image:
  repository: seohuipark/crawler-mind-mcp-client
  tag: dev
  pullPolicy: Always

env:
  MCP_SERVER_URL: "http://mcp-server:4200/my-custom-path/"  # 끝의 / 제거
  CORS_ORIGINS: "[\"https://crawler.alvinpark.xyz\",\"https://api.alvinpark.xyz\",\"http://localhost:3000\"]"  # API 서브도메인 추가
  OPENAI_MODEL: "gpt-4o"
  OPENAI_API_KEY: "YOUR_OPENAI_API_KEY_HERE"

  DATABASE_URL: "postgresql+asyncpg://admin:YOUR_PASSWORD@postgres:5432/crawler_mind"

  # PostgreSQL
  # POSTGRES_USER: "admin"
  # POSTGRES_PASSWORD: "199084"
  # POSTGRES_HOST: "postgres"
  # POSTGRES_PORT: "5432"
  # POSTGRES_DB: "crawler_mind"
  # POSTGRES_POOL_SIZE: "10"
  # POSTGRES_MAX_OVERFLOW: "20"
  # POSTGRES_POOL_TIMEOUT: "30"
  # POSTGRES_POOL_RECYCLE: "3600"  # 1시간마다 연결 재생성
  # POSTGRES_POOL_PRE_PING: "true"  # 연결 상태 확인

  # OpenSearch - HOST와 PORT 둘 다 필요
  OPENSEARCH_HOST: "https://opensearch.alvinpark.xyz"
  OPENSEARCH_PORT: "9200"               # 포트 별도 지정

  # Qdrant - HOST와 PORT 둘 다 필요
  QDRANT_HOST: "https://qdrant.alvinpark.xyz"  # 외부 도메인 또는 "http://qdrant:6333" (내부 서비스)
  QDRANT_PORT: "6333"                   # 포트 별도 지정

  # 메모리 최적화 설정
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  
  # 벡터 DB 처리 최적화 설정 (성능과 안정성의 균형)
  MAX_WORKERS: "2"                    # 임베딩 생성 워커 수 적절히 증가
  EMBEDDING_BATCH_SIZE: "8"           # 임베딩 배치 크기 적절히 증가 (3GB 메모리 고려)
  QDRANT_BATCH_SIZE: "15"             # Qdrant 배치 크기 적절히 증가 (3GB 메모리 고려)
  CHUNK_SIZE: "1000"                  # 텍스트 청킹 크기 적절히 증가 (3GB 메모리 고려)
  CHUNK_OVERLAP: "50"                 # 청크 오버랩 적절히 증가 (3GB 메모리 고려)
  
  # 메모리 관리 설정 (3GB 메모리에 최적화)
  ENABLE_MEMORY_CLEANUP: "true"       # 배치 처리 후 메모리 정리 활성화
  GC_THRESHOLD: "50"                  # 가비지 컬렉션 임계값 적절히 설정
  MAX_DOCUMENTS_IN_MEMORY: "30"       # 메모리에 동시 보관할 최대 문서 수 적절히 증가
  
  # 파일 업로드 관련 설정
  MAX_FILE_SIZE: "500MB"
  UPLOAD_TIMEOUT: "3600"

# 추가적인 안정성 설정
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# 대용량 파일 처리를 위한 추가 설정
nodeSelector: {}
tolerations: []
affinity: {}

# HPA 설정 (선택사항 - 필요시 활성화)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

resources:
  requests:
    cpu: 250m
    memory: 1Gi
  limits:
    cpu: 1000m
    memory: 3Gi  # 성능과 안정성의 균형 (7.4GB 중 3GB, 여유있게)

# 메모리 압박 시 파드 스케줄링 정책
tolerations:
- key: "memory-pressure"
  operator: "Exists"
  effect: "NoSchedule"

# 메모리 사용량 모니터링을 위한 설정
monitoring:
  enabled: true
  memoryThreshold: "80%"  # 메모리 사용률 80% 이상 시 알림

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: nginx
  annotations:
    # 파일 업로드 크기 제한을 500MB로 설정 (대용량 RAG 데이터 처리)
    nginx.ingress.kubernetes.io/client-max-body-size: "500m"
    # 업로드 타임아웃을 60분으로 설정 (대용량 파일 처리 시간 고려)
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # 연결 유지 시간을 60분으로 설정
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
  hosts:
    - host: api.alvinpark.xyz  # 🔥 API 서브도메인으로 변경
      paths:
        - path: /
          pathType: Prefix
  tls: [] # Cloudflare Tunnel 쓸 때는 여기 비워둬도 됨
